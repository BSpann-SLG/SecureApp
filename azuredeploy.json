{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceNamePrefix":{
            "type": "string",
            "metadata": {
              "description": "Prefix for naming resources"
          }
        },
         "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            },
            "defaultValue": "https://raw.githubusercontent.com/azuregomez/SecureApp/main/"
        },
        "_artifactsLocationSasToken": {
            "type": "secureString",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            },
            "defaultValue": ""
        },
        "hubVnetName": {
            "type": "string",
            "defaultValue": "[concat(parameters('resourceNamePrefix'),'-hub-vnet')]",
            "metadata": {
              "description": "Name of VNET"
            }
        },       
        "hubVnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.10.0.0/16",
            "metadata": {
              "description": "VNet Address prefix"
            }
        },
         "spokeVnetName": {
            "type": "string",
            "defaultValue": "[concat(parameters('resourceNamePrefix'),'-spoke-vnet')]",
            "metadata": {
              "description": "Name of VNET"
            }
        },       
        "spokeVnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.20.0.0/16",
            "metadata": {
              "description": "VNet Address prefix"
            }
        },
        "appServiceInboundSubnetName": {
            "type": "string",
            "defaultValue": "appservice-inbound-subnet",
            "metadata": {
                "description": "Subnet name that will contain the App Service Private Endpoint"
            }
        },
        "appServiceOutboundSubnetName": {
            "type": "string",
            "defaultValue": "appservice-outbound-subnet",
            "metadata": {
                "description": "Subnet name that will contain the App Service Delegated Subnet for VNet Integration"
            }
        },
        "appServiceInboundSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.20.2.0/24",
            "metadata": {
              "description": "ASE Subnet Inbound Address prefix"
            }
        },       
         "appServiceOutboundSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.20.3.0/24",
            "metadata": {
              "description": "ASE Subnet Inbound Address prefix"
            }
        },
        "wafSubnetName": {
          "type": "string",
          "defaultValue": "waf-subnet",
          "metadata": {
              "description": "Subnet name that will contain App Gateway"
          }
        },
        "wafSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.10.0.0/24",
            "metadata": {
              "description": "WAF subnet Address prefix"
            }
        },                   
        "firewallSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.10.1.0/24",
            "metadata": {
              "description": "Firewall subnet Address prefix"
            }
        },
        "sqlSubnetName": {
          "type": "string",
          "defaultValue": "sql-subnet",
          "metadata": {
              "description": "Subnet name that will contain SQL Private Endpoint"
          }
        },
        "sqlSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.20.10.0/24",
            "metadata": {
              "description": "Firewall subnet Address prefix"
            }
        },
        "bastionSubnetName": {
          "type": "string",
          "defaultValue": "bastion-subnet",
          "metadata": {
              "description": "Subnet name that will contain the bastion VM"
          }
        },
        "bastionSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.10.5.0/24",
            "metadata": {
              "description": "Bastion subnet Address prefix"
            }
        },
        "appServicePlanName": {
            "type": "string",
            "defaultValue": "[concat(parameters('resourceNamePrefix'),'-asp')]",
            "metadata": {
              "description": "The name of the App Service plan to use for hosting the web app."
            }
        },
        "appServicePlanSKU": {
          "type": "string",
          "allowedValues": [           
            "P1",
            "P2",
            "P3",
            "P4",
            "P1v2",
            "P2v2",
            "P3v2",
            "P1v3",
            "P2v3",
            "P3v3"
          ],
          "defaultValue": "P1v3",
          "metadata": {
            "description": "The pricing tier for the ASP (hosting plan)."
          }
        },
        "appServicePlanCapacity": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
              "description": "Capacity."
            }
        },
        "webAppName": {
            "type": "string",
            "defaultValue": "[concat(parameters('resourceNamePrefix'),'Web')]",
            "metadata": {
              "description": "The name of the web app that will be created."
            }
        },       
        "sourceCodeZipUrl":{
          "type": "string",
          "defaultValue": "https://storagegomez.blob.core.windows.net/public/persondemo.zip",
           "metadata": {
              "description": "The zip file of the codes."
            }
        },       
        "sqlServerName": {
          "type": "string",
          "defaultValue":"[concat(parameters('resourceNamePrefix'),'-sqlserver')]",
          "metadata": {
            "description": "sql server name."
          }
        },
        "sqlAdministratorLogin": {
          "type": "string",
          "defaultValue": "azureadmin",
          "metadata": {
              "description": "Username for SQL Admin."
          }
        },
        "sqlAdministratorPassword": {
            "type": "securestring",
            "defaultValue": "p@ssw0rd1!",
            "metadata": {
            "description": "Password for the SQL."
            }
        },
        "sqlDatabaseName": {
          "type": "string",
          "defaultValue":"[concat(parameters('resourceNamePrefix'),'sqldb')]",
          "metadata": {
            "description": "sql server db name."
          }
        },
        "sqldatabaseBacpacUrl":{
          "type": "string",
          "defaultValue": "https://storagegomez.blob.core.windows.net/public/sports.bacpac",
          "metadata": {
            "description": "sql server bacpac location"
          }
        },
        "appgwyName":{
          "type": "string",
          "defaultValue": "[concat(parameters('resourceNamePrefix'),'-appgwy')]",
          "metadata": {
              "description": "App Gateway Name."
          }
        },
         "keyvaultname":{
          "type": "string",
          "defaultValue": "[concat(parameters('resourceNamePrefix'),'-keyvault')]",
          "metadata": {
              "description": "Key Vault Name."
          }
        },
        "tenantId": {
          "type": "string",
          "defaultValue": "[subscription().tenantId]",
          "metadata": {
            "description": "Tenant Id of the subscription. Get using Get-AzureRmSubscription cmdlet or Get Subscription API"
          }
        },
        "ADUserObjectID": {
          "type": "string",
          "metadata": {
            "description": "Object Id of the AD user. Get using Get-AzADUser or Get-AzADServicePrincipal cmdlets"
          }
        },
        "vaultSkuName": {
          "type": "string",
          "defaultValue": "Standard",
          "allowedValues": [
            "Standard",
            "Premium"
          ],
          "metadata": {
            "description": "SKU for the vault"
          }
        },
        "cnStringSecretName":{
          "type": "string",
          "defaultValue": "dbcnstr",
          "metadata": {
            "description": "DB cnstring secret name"
          }
        }
    },
    "variables":{
      "privateLinkNestedTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/privatelink.json', parameters('_artifactsLocationSasToken')))]",
      "dnsvnetlinkNestedTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/dnsvnetlink.json', parameters('_artifactsLocationSasToken')))]",
      "appgatewayNestedTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/appgateway.json', parameters('_artifactsLocationSasToken')))]",
      "sqldbNestedTemplateUri" : "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/sqldb.json', parameters('_artifactsLocationSasToken')))]",
      "azfirewallNestedTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/firewall.json', parameters('_artifactsLocationSasToken')))]",
      "delegatedSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('spokevnetName'), parameters('appServiceOutboundSubnetName'))]",
      "wafSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubvnetName'), parameters('wafSubnetName'))]",                              
      "sqldbConnectionStringName": "dbcnstr",
      "sqlConnectionStringResourceId" : "[resourceId('Microsoft.KeyVault/vaults/secrets',parameters('keyvaultname'),variables('sqldbConnectionStringName'))]",      
      "secretsqlcnstr": "[concat('Server=tcp:',parameters('sqlServerName'),'.database.windows.net,1433;Initial Catalog=',parameters('sqldatabasename'), ';User ID=', parameters('sqlAdministratorLogin'), ';Password=', parameters('sqlAdministratorPassword'),';')]"
    },
    "resources": [        
    {
        "comments": "Hub VNet",
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[parameters('hubVnetName')]",
        "location": "[resourcegroup().location]",        
        "properties": {
            "addressSpace": {
            "addressPrefixes": [
              "[parameters('hubVnetAddressPrefix')]"
            ]
          },
        "subnets": [           
            {
              "name": "[parameters('wafSubnetName')]",
              "properties": {
                "addressPrefix": "[parameters('wafSubnetPrefix')]"               
              }              
            },
            {
              "name": "AzureFirewallSubnet",
              "properties": {
                "addressPrefix": "[parameters('firewallSubnetPrefix')]"                
              }              
            },            
            {
              "name": "[parameters('bastionSubnetName')]",
              "properties": {
                "addressPrefix": "[parameters('bastionSubnetPrefix')]"                
              }              
            }
        ]    
      }        
    },      
    {
        "comments": "Spoke VNet",
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[parameters('SpokeVnetName')]",
        "location": "[resourcegroup().location]",        
        "properties": {
            "addressSpace": {
            "addressPrefixes": [
              "[parameters('SpokeVnetAddressPrefix')]"
            ]
          },
        "subnets": [
            {
              "name": "[parameters('appServiceInboundSubnetName')]",
              "properties": {
                "addressPrefix": "[parameters('appServiceInboundSubnetPrefix')]",
                "privateEndpointNetworkPolicies": "Disabled"
              }              
            }, 
            {
              "name": "[parameters('appServiceOutboundSubnetName')]",
              "properties": {
                "addressPrefix": "[parameters('appServiceOutboundSubnetPrefix')]",         
                "serviceEndpoints": [
                  {                      
                      "service": "Microsoft.Sql",
                      "locations": [
                        "[resourcegroup().location]"
                      ]
                  },
                  {                      
                    "service": "Microsoft.Storage",
                    "locations": [
                      "[resourcegroup().location]"
                    ]
                  }                  
                ],               
              "delegations": [
                  {
                      "name": "delegation",                      
                      "properties": {
                          "serviceName": "Microsoft.Web/serverfarms",
                          "actions": [
                              "Microsoft.Network/virtualNetworks/subnets/action"
                          ]
                      }
                  }
              ]
              }
            },            
            {
              "name": "[parameters('sqlSubnetName')]",
              "properties": {
                "addressPrefix": "[parameters('sqlSubnetPrefix')]",
                "privateEndpointNetworkPolicies": "Disabled"                
              }              
            }
        ]    
      }        
    },
    {
        "comments": "App Service Plan",
        "apiVersion": "2018-02-01",
        "name": "[parameters('appServicePlanName')]",
        "type": "Microsoft.Web/serverfarms",
        "location":  "[resourceGroup().location]",               
        "properties": {
          "name": "[parameters('appServicePlanName')]"          
        },
        "sku": {
          "name": "[concat(parameters('appServicePlanSKU'))]",         
          "capacity": "[parameters('appServicePlanCapacity')]"
        }
    },
    {
        "comments": "Web Application",
        "apiVersion": "2020-06-01",    
        "type": "Microsoft.Web/sites",
        "name": "[parameters('webAppName')]",
        "location": "[resourceGroup().location]",       
        "dependsOn": [          
          "[concat('Microsoft.Web/serverFarms/',parameters('appServicePlanName'))]"                         
        ],
        "identity": {
          "type": "SystemAssigned"
        },
        "properties": {
          "name": "[parameters('webAppName')]",
          "serverFarmId": "[resourceId('Microsoft.Web/serverFarms',parameters('appServicePlanName'))]",
          "siteConfig": {
                    "appSettings": [
                        {
                            "name": "WEBSITE_VNET_ROUTE_ALL",
                            "value": 1
                        },
                        {
                            "name": "WEBSITE_DNS_SERVER",
                            "value": "168.63.129.16"
                        }
                    ]
          }            
        },
        "resources": [     
            {
              "apiVersion": "2018-11-01",
              "name": "MSDeploy",
              "type": "extensions",                           
              "dependsOn": [
                 "[resourceId('Microsoft.Web/Sites', parameters('webAppName'))]"                 
              ],
              "properties": {
                "packageUri": "[parameters('sourceCodeZipUrl')]"
              }
            },                           
            {                
              "name": "virtualNetwork",
              "type": "config",
              "apiVersion": "2018-02-01",
              "location": "[resourcegroup().location]",    
              "dependsOn": [
                "[concat('Microsoft.Web/sites/', parameters('webAppName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('spokevnetName'))]"
              ],
              "properties":
              {
                  "subnetResourceId": "[variables('delegatedSubnetRef')]",
                  "swiftSupported": true
              }
            },
            {
                    "type": "config",
                    "name": "connectionstrings",          
                    "apiVersion": "2018-02-01",          
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]",
                        "[resourceId('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]",
                        "[resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), variables('sqldbConnectionStringName'))]"                   
                    ],
                    "properties": {                                                
                         "[parameters('cnStringSecretName')]": {
                            "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('sqlConnectionStringResourceId')).secretUriWithVersion, ')')]",
                            "type": "SQLAzure"
                        }
                    }
            }
          ]
    },    
    {
            "comments": "privatelink.json nested ARM template for Web",
            "name": "linkedTemplate-web-private-link",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokevnetname'))]"                
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('privateLinkNestedTemplateUri')]"
                },
                "parameters": {
                    "prefix":{
                        "value": "[parameters('resourceNamePrefix')]"
                    },
                    "suffix": {
                        "value": "web"
                    },                   
                    "resourceType": {
                        "value": "Microsoft.Web/sites"
                    },
                    "resourceName": {
                        "value": "[parameters('webAppName')]"
                    },
                    "groupType": {
                        "value": "sites"
                    },
                    "vnet" :{
                        "value": "[parameters('spokevnetName')]"
                    },
                    "subnet": {
                        "value": "[parameters('appServiceInboundSubnetName')]"
                    },
                    "privateDNSZoneName": {
                        "value": "privatelink.azurewebsites.net"
                    }
                }
            }
    },
    {
            "comments": "sqldb.json nested ARM template for SQL server and database with bacpac deployed",
            "name": "linkedTemplate-sql-db",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "dependsOn": [                
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokevnetname'))]"                
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('sqldbNestedTemplateUri')]"
                },
                "parameters": {
                    "sqlserverName":{
                        "value": "[parameters('sqlServerName')]"
                    },
                    "sqlAdministratorLogin": {
                        "value": "[parameters('sqlAdministratorLogin')]"
                    },                   
                    "sqlAdministratorPassword": {
                        "value": "[parameters('sqlAdministratorPassword')]"
                    },
                    "sqlDatabaseName": {
                        "value": "[parameters('sqlDatabaseName')]"
                    },
                    "sqldatabaseBacpacUrl": {
                        "value": "[parameters('sqldatabaseBacpacUrl')]"
                    }
                }
            }
    },
    {
            "comments": "privatelink.json nested ARM template for SQL endpoint",
            "name": "linkedTemplate-sql-private-link",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokevnetname'))]"                
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('privateLinkNestedTemplateUri')]"
                },
                "parameters": {
                    "prefix":{
                        "value": "[parameters('resourceNamePrefix')]"
                    },
                    "suffix": {
                        "value": "sql"
                    },                   
                    "resourceType": {
                        "value": "Microsoft.Sql/servers"
                    },
                    "resourceName": {
                        "value": "[parameters('sqlServerName')]"
                    },
                    "groupType": {
                        "value": "sqlServer"
                    },
                    "vnet" :{
                        "value": "[parameters('spokevnetName')]"
                    },
                    "subnet": {
                        "value": "[parameters('sqlSubnetName')]"
                    },
                    "privateDNSZoneName": {
                        "value": "privatelink.database.windows.net"
                    }
                }
            }
    },
    {
            "comments": "dnsvnetlink.json nested ARM template for Web/Spoke",
            "name": "linkedTemplate-web-spoke-vnet-link",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "dependsOn": [
                "linkedTemplate-web-private-link"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('dnsvnetLinkNestedTemplateUri')]"
                },
                "parameters": {                   
                    "vnet" :{
                        "value": "[parameters('spokevnetName')]"
                    },                    
                    "name": {
                        "value": "web-dns-spoke-link"
                    }
                }
            }
    },
    {
            "comments": "dnsvnetlink.json nested ARM template for Web/Hub",
            "name": "linkedTemplate-web-hub-vnet-link",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "dependsOn": [
                "linkedTemplate-web-private-link"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('dnsvnetLinkNestedTemplateUri')]"
                },
                "parameters": {                   
                    "vnet" :{
                        "value": "[parameters('hubvnetName')]"
                    },                    
                    "name": {
                        "value": "web-dns-hub-link"
                    }
                }
            }
    },
    {
            "comments": "dnsvnetlink.json nested ARM template for SQL/Spoke link",
            "name": "linkedTemplate-sql-hub-vnet-link",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "dependsOn": [
                "linkedTemplate-sql-private-link"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('dnsvnetLinkNestedTemplateUri')]"
                },
                "parameters": {                   
                    "vnet" :{
                        "value": "[parameters('spokevnetName')]"
                    },                    
                    "name": {
                        "value": "sql-dns-hub-link"
                    }
                }
            }
    },        
    {
            "comments": "appgateway.json nested ARM template for App Gateway",
            "name": "linkedTemplate-appgateway",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "dependsOn": [                
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('hubvnetName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('spokevnetName'))]",
                "linkedTemplate-web-hub-vnet-link"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('appgatewayNestedTemplateUri')]"
                },
                "parameters": {                   
                    "domainNameLabel" :{
                        "value": "[parameters('resourceNamePrefix')]"
                    },                                        
                    "appgwyName": {
                        "value": "[parameters('appgwyName')]"
                    },
                    "webAppName": {
                        "value": "[parameters('webAppName')]"
                    },
                    "wafSubnetRef": {
                        "value": "[variables('wafSubnetRef')]"
                    }
                }
            }
    },
     {
            "comments": "firewall.json nested ARM template for Az Firewall",
            "name": "linkedTemplate-azfirewall",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "dependsOn": [                
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('hubvnetName'))]"                
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('azfirewallNestedTemplateUri')]"
                },
                "parameters": {                   
                    "prefix":{
                        "value": "[parameters('resourceNamePrefix')]"
                    }
                }
            }
    },
    {
      "comments": "Key Vault",
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVaultName')]",
      "apiVersion": "2019-09-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [          
        "[resourceId('Microsoft.Network/virtualNetworks/', parameters('spokevnetName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
      ],
      "properties": {
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "tenantId": "[parameters('tenantId')]",
        "accessPolicies": [
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[parameters('ADUserObjectID')]",
            "permissions": {
              "keys": ["all"],
              "secrets": ["all"]
            }
          },
          {
            "tenantId": "[parameters('tenantId')]",            
            "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName')), '2016-03-01','Full').identity.principalId]",            
            "permissions": {
                   "secrets": [ "get" ]
                }
          }
        ],
        "sku": {
          "name": "[parameters('vaultSkuName')]",
          "family": "A"
        }       
      },
      "resources" :[
        {
          "type": "secrets",
          "name": "[variables('sqldbConnectionStringName')]",
          "apiVersion": "2019-09-01",
          "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"                        
                    ],
          "properties":{
            "value" : "[variables('secretsqlcnstr')]"
          }
        }
      ]
    }  
  ]
}